apply plugin: 'maven'
apply plugin: 'com.android.library'

group = 'com.github.joshjdevl.libsodiumjni' // used by maven plugin
archivesBaseName = 'libsodium-jni-selfbuilt' // used by maven plugin
version = '1.0.3'

repositories {
    mavenCentral()
    mavenLocal()
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

    // To let the libs be included in other projects
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode project.VERSION_CODE.toInteger()
        versionName project.VERSION_NAME
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    // TODO are these required in this lib project?
    //compile fileTree(include: ['*.jar'], dir: 'libs')
   //compile 'com.android.support:appcompat-v7:23.1.1'
   testCompile group: 'com.google.guava', name: 'guava', version: '19.0'
   testCompile 'junit:junit:4.12'
}

buildscript {
    System.properties['com.android.build.gradle.overrideVersionCheck'] = 'true'
    repositories {
        mavenCentral()
    	jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
    }
}

if (!hasProperty('uploadSnapshotRepositoryUri')) project.ext.uploadSnapshotRepositoryUri = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
if (!hasProperty('uploadRepositoryUri')) project.ext.uploadRepositoryUri = project.ext.uploadSnapshotRepositoryUri
if (!hasProperty('uploadUser')) project.ext.uploadUser = ''
if (!hasProperty('uploadPassword')) project.ext.uploadPassword = ''

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri(uploadRepositoryUri)) {
                authentication(userName: uploadUser, password: uploadPassword)
            }
            snapshotRepository(url: uri(uploadSnapshotRepositoryUri)) {
                authentication(userName: uploadUser, password: uploadPassword)
            }
        }
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocJar, sourcesJar
}

